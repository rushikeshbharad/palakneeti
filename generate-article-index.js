const fs = require("fs");
const path = require("path");
const prettier = require("prettier");

async function generateArticleIndex() {
  const articlesDir = path.join(__dirname, "blogs", "constants", "articles");
  const indexPath = path.join(__dirname, "blogs", "constants", "index.js");

  try {
    const files = fs.readdirSync(articlesDir);
    const articleFiles = files.filter((file) => file.endsWith(".js"));

    if (articleFiles.length === 0) {
      console.log("No articles found in `blogs/constants/articles`. Index file not created.");
      return;
    }

    // Sort files by name in descending order (latest first)
    articleFiles.sort((a, b) => b.localeCompare(a));

    const imports = [];
    const articleEntries = [];

    articleFiles.forEach((file) => {
      const fileName = path.basename(file, ".js");
      // Replace hyphens with underscores for a valid variable name
      const importName = `articleData_${fileName.replace(/-/g, "_")}`;

      imports.push(`import ${importName} from "./articles/${fileName}.js";`);
      articleEntries.push(`{ '${fileName}': ${importName} }`);
    });

    const fileContent = `// This file is auto-generated by generate-article-index.js. Do not edit manually.

${imports.join("\n")}

const ARTICLES = [
  ${articleEntries.join(",\n  ")}
];

export default ARTICLES;
`;

    // Get Prettier config to format the file nicely
    const prettierConfig = await prettier.resolveConfig(__dirname);
    const formattedContent = await prettier.format(fileContent, {
      ...prettierConfig,
      parser: "babel",
    });

    fs.writeFileSync(indexPath, formattedContent);

    console.log(`✅ Successfully generated article index at: ${indexPath}`);
    console.log(`   Indexed ${articleFiles.length} articles.`);
  } catch (error) {
    console.error("❌ Error generating article index:", error);
  }
}

generateArticleIndex();
